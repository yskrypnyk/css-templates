//COLORS:
$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;

// Normalizing CSS
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {

  //Default font-size is 16px
  //so to make font size 10px we divide 10 by 16
  // we have to use percentage in order to allow people increase default

  font-size: 62.5%; // = 10px - this value is used for rem
}

body {
  font-family: "Lato";
  font-weight: 400;
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;

  box-sizing: border-box;
}

.header {
  height: 95vh; //95% of viewport height
  background-image: linear-gradient(
                  to right bottom, // gradient direction
                  rgba($color-primary-light, 0.8), // from color
                  rgba($color-primary-dark, 0.8)), // to color
  url("../img/hero.jpg");
  background-size: cover;
  background-position: top; // image part that stays the same on scale
  position: relative;

  //white line on header
  /* https://bennettfeely.com/clippy/ */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%); //shifts (centers) the box by x an y
  text-align: center;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  //if back part of transformed element hidden (fixes shaking)
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /*animation-delay: 3s;*/
  /*animation-iteration-count: 3;*/
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;

  animation: moveInRight 1s ease-out;
  /*animation-name: moveInRight;*/
  /*animation-duration: 1s;*/
  /*animation-timing-function: ease-out;*/

}

@keyframes moveInLeft {
  //start
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(2rem);
  }

  //finish
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  //start
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  //finish
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  //start
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }

  //finish
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;

  //smooth transitions
  transition: all .2s;

  font-size: 1.6rem;

  //position for pseudo element
  position: relative;
}

.btn:hover {
  transform: translateY(-.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-.1rem);
  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

//element that is EXACTLY like a button, but behind it
.btn::after {
  content: ""; //required property for pseudo element to appear
  display: inline-block; //required property for pseudo element to appear

  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn--white {
  background-color: $color-white;
  color: $color-grey-dark;
}

.btn--white::after {
  background-color: $color-white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /*animation-name: moveInRight;*/
  /*animation-duration: 1s;*/
  /*animation-timing-function: ease-out;*/
  /*animation-delay: .75s;*/

  /*initial keyframe styles are added*/
  animation-fill-mode: backwards;
}